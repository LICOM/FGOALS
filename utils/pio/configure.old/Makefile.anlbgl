#
# This file should define the following:
#
#   INCLUDES
#   LIBS
#   COPTS
#   FOPTS
#   CFLAGS
#   FFLAGS
#   AWK
#   AR
#
USEPNETCDF = yes
USENETCDF  = yes
USEMCT     = yes
USEBOX     = yes

# Serial NETCDF
ifeq ($(USENETCDF),yes) 
  SNETCDF=/soft/tools/netcdf-3.6.1
  SNETCDFINC = -I$(SNETCDF)/include
  SNETCDFLIB = -L$(SNETCDF)/lib -I$(SNETCDF)/include -lnetcdf
  SNETCDF_DEFINE = _NETCDF
else
  SNETCDF        =
  SNETCDFINC     =
  SNETCDFLIB     =
  SNETCDF_DEFINE = _NONETCDF
endif

# Parallel NETCDF
ifeq ($(USEPNETCDF),yes)
   PNETCDF=/soft/tools/pnetcdf/pnetcdf-1.0.1-xlc
   PNETCDFINC = -I$(PNETCDF)/include
   PNETCDFLIB = -L$(PNETCDF)/lib -lpnetcdf
   PNETCDF_DEFINE = _PNETCDF
else
   PNETCDFINC     =
   PNETCDFLIB     =
   PNETCDF_DEFINE = _NOPNETCDF
endif


NETCDFINCS = $(SNETCDFINC) $(PNETCDFINC)
NETCDFLIBS = $(SNETCDFLIB) $(PNETCDFLIB)

ifeq ($(USEMCT), yes)
   MCTBASE=../mct
#   MCTBASE= $(HOME)/cvs/MCT
   MPEU=$(MCTBASE)/mpeu
   MPEUINC= -I$(MPEU)
   MPEULIB=-L$(MPEU) -lmpeu
   MCT=$(MCTBASE)/mct
   MCTINC=-I$(MCT)
   MCTLIB= -L$(MCT) -lmct
   MCT_DEFINE = _USEMCT
else
   MPEUINC    =
   MPEULIB    =
   MCTINC     =
   MCTLIB     =
   MCT_DEFINE = _NOUSEMCT
endif
MCTINCS = $(MCTINC) $(MPEUINC)
MCTLIBS = $(MCTLIB) $(MPEULIB)

ifeq ($(USEBOX), yes)
  BOX_DEFINE= _USEBOX
else
  BOX_DEFINE= _NOUSEBOX
endif


MEMMON=/soft/tools/memmon
MEMMONLIB=-L$(MEMMON) -lmemmon.rts

STACKMON=/soft/tools/stackmonitor
STACKMONLIB=-L$(STACKMON) -lstackmonitor


#
# 
#

FC=mpif90.ibm
FBASE= -qarch=440 -qmaxmem=64000

CC=mpicc.ibm


#
# 
#

EXITHANDLER=$(HOME)/src/exithandler
EXITLIB=-L$(EXITHANDLER) -lexithandler


INCLUDES= $(MCTINCS) $(NETCDFINCS) 

LIBS = $(NETCDFLIBS) $(MCTLIBS) $(MEMMONLIB) $(EXITLIB)



#
# Options
#


COPTS := -D_BGL -D$(MCT_DEFINE) -D$(BOX_DEFINE) -D$(PNETCDF_DEFINE) -D$(SNETCDF_DEFINE) -DUSEMPIIO

# xlf needs -Dfoo changed to -WF,-Dfoo
cpre = -WF,-D
FOPTS   := $(patsubst -D%,$(cpre)%,$(COPTS)) -qnullterm


#
# Optimize
#


OPTIMIZE=no


ifeq ($(OPTIMIZE),yes)
  FFLAGS = $(FBASE) -O4 -qnoipa -qmaxmem=-1 -qstrict
else
  FFLAGS := $(FBASE) -g 
endif


AWK=awk
AR=ar cq




#
# Cpp
#

EXPLICIT_CPP=no
CPP=cpp
CPPFLAGS= $(CFLAGS) $(COPTS)


